This is netcat.info, produced by makeinfo version 4.0b from netcat.texi.

INFO-DIR-SECTION Net Utilities
START-INFO-DIR-ENTRY
* Netcat: (netcat).     The GNU famous networking tool.
END-INFO-DIR-ENTRY

   This file documents the Netcat utility for network operations data.

   Copyright (C) 2002  Giovanni Giacobbi

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with the
Invariant Sections being "GNU General Public License" and "GNU Free
Documentation License", with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the section
entitled "GNU Free Documentation License".


File: netcat.info,  Node: Top,  Next: Overview,  Prev: (dir),  Up: (dir)

Netcat 0.5.0
************

   This manual documents version 0.5.0 of GNU Netcat, the freely
available utility for network connections.

   Copyright (C) 1996, 1997, 1998, 2000, 2001 Free Software Foundation,
Inc.

* Menu:

* Overview::            Features of Netcat.
* Invoking::            Netcat command-line arguments.
* Examples::            Examples of usage.


File: netcat.info,  Node: Overview,  Next: Invoking,  Prev: Top,  Up: Top

Overview
********

   Netcat is a simple Unix utility which reads and writes data across
network connections, using TCP or UDP protocol.  It is designed to be a
reliable "back-end" tool that can be used directly or easily driven by
other programs and scripts.  At the same time, it is a feature-rich
network debugging and exploration tool, since it can create almost any
kind of connection you would need and has several interesting built-in
capabilities.  Netcat, or "nc" as the original program was named,
should have been supplied long ago as another one of those cryptic but
standard Unix tools.


File: netcat.info,  Node: Invoking,  Next: Examples,  Prev: Overview,  Up: Top

Invoking
********

   Netcat has three main modes of functionality.  These are the connect
mode, the listen mode, and the tunnel mode.

   The most common mode is the connect mode, which for example allows
the output of a locally called command to be redirected for example to
a remote Netcat listening or to any other kind of daemon waiting for a
connection.

   On the other hand, the listen mode can be used to obtain some kind
of stream of data from a remote site.

   The most new feature is the tunnel mode, which is a powerful and
reliable mode that allows tunneling a remote site towards any other
remote site, allowing to specify for example from which interface
create the connection and from which port.

* Menu:

* Basic Startup Options::
* Protocol and Interface Options::
* Common Behaviour Options::


File: netcat.info,  Node: Basic Startup Options,  Next: Protocol and Interface Options,  Prev: Invoking,  Up: Invoking

Basic Startup Options
=====================

`-V'
`--version'
     Display the version of Netcat and exit.

`-h'
`--help'
     Print a help message describing most common Netcat's command-line
     switches and a short description.


File: netcat.info,  Node: Protocol and Interface Options,  Next: Common Behaviour Options,  Prev: Basic Startup Options,  Up: Invoking

Protocol and Interface Options
==============================

`-t'
`--tcp'
     Use the TCP protocol. this is the default.  It may be useful (see
     Tunnel Mode) to specify this option after for example the UDP
     option in order to allow a cross-tunneling between TCP and UDP.

`-u'
`--udp'
     Use the UDP protocol. see TCP.

`-p NUM'
`--local-port=NUM'
     under writing ...

`-s ADDRESS'
`--source=ADDRESS'
     under writing ...

`-P NUM'
`--tunnel-port=NUM'
     under writing ...

`-S ADDRESS'
`--tunnel-source=ADDRESS'
     under writing ...


File: netcat.info,  Node: Common Behaviour Options,  Prev: Protocol and Interface Options,  Up: Invoking

Common Behaviour Options
========================

`-i SECS'
`--interval SECS'
     sets the buffering output delay time. This affects all the current
     modes and makes the connection sock to buffer outgoing data. this
     means that in tunnel mode everything received from the listening
     socket is buffered for the connect socket.

`-r'
`--randomize'
     randomizes the target remote ports ranges.  If more than one range
     is specified it will randomize the ports in the whole range.


File: netcat.info,  Node: Examples,  Prev: Invoking,  Up: Top

Examples
********

   under writing ...

   netcat [options] hostname port [port] ...

   netcat -l -p port [options] [hostname] [port] ...



Tag Table:
Node: Top938
Node: Overview1380
Node: Invoking2058
Node: Basic Startup Options2956
Node: Protocol and Interface Options3311
Node: Common Behaviour Options4007
Node: Examples4614

End Tag Table
